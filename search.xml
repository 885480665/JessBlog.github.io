<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>树莓派安装SSH</title>
      <link href="/22022/12/27/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85SSH/"/>
      <url>/22022/12/27/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85SSH/</url>
      
        <content type="html"><![CDATA[<p>SSH 在树莓派上是默认关闭的，因此在你安装好全新的 Raspbian 后打开树莓派时，你需要启用它。</p><h2 id="一、方法一：（图形界面）"><a href="#一、方法一：（图形界面）" class="headerlink" title="一、方法一：（图形界面）"></a>一、方法一：（图形界面）</h2><p>1、通过菜单进入树莓派的配置界面。<br><img src="https://s1.ax1x.com/2023/02/13/pSo8wY8.png" alt="1"></p><p>2、进入接口（interfaces）标签，启动 SSH并重启你的树莓派</p><p><img src="https://s1.ax1x.com/2023/02/13/pSo80fS.png" alt="2"></p><h2 id="方法二：（命令行）"><a href="#方法二：（命令行）" class="headerlink" title="方法二：（命令行）"></a>方法二：（命令行）</h2><p>1、打开SSH功能(图形化界面系统)：<br>2、打开终端敲入命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo raspi-config</span><br></pre></td></tr></table></figure><p>3、选择：Interfacing Options<br>4、找到SSH(对其进行enable操作)</p><h2 id="方法三：（命令行）"><a href="#方法三：（命令行）" class="headerlink" title="方法三：（命令行）"></a>方法三：（命令行）</h2><p>安装openssh-server</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install openssh-server</span><br></pre></td></tr></table></figure><p>卸载openssh-server</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get remove openssh-server</span><br></pre></td></tr></table></figure><p>判断SSH是否运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ps -ax</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2023/02/13/pSo8dFf.png" alt="3"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Raspberry Pi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于Hexo搭建博客之二</title>
      <link href="/2023/02/10/%E5%9F%BA%E4%BA%8EHexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E4%BA%8C/"/>
      <url>/2023/02/10/%E5%9F%BA%E4%BA%8EHexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E4%BA%8C/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>此教程参考大佬们集合为一体演化产品<br>    唐志远的博客大佬文章：<a href="https://tzy1997.com/articles/hexo1601/">https://tzy1997.com/articles/hexo1601/</a><br>    Fomal大佬文章：<a href="https://www.fomal.cc/posts/e593433d.html">https://www.fomal.cc/posts/e593433d.html</a></p><h2 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h2><h3 id="本教程面向Windows用户"><a href="#本教程面向Windows用户" class="headerlink" title="本教程面向Windows用户"></a>本教程面向Windows用户</h3><p>操作系统Windows11<br>Node<br>Git<br>Hexo<br>idea(推荐使用Visual Studo Code)<br>一个GitHub账号<br>一个云服务器（可选）<br>一个域名（可选）</p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于Hexo搭建博客之一</title>
      <link href="/2023/02/10/%E5%9F%BA%E4%BA%8EHexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E4%B8%80/"/>
      <url>/2023/02/10/%E5%9F%BA%E4%BA%8EHexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E4%B8%80/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>此教程参考大佬们集合为一体演化产品<br>    唐志远的博客大佬文章：<a href="https://tzy1997.com/articles/hexo1601/">https://tzy1997.com/articles/hexo1601/</a><br>    Fomal大佬文章：<a href="https://www.fomal.cc/posts/e593433d.html">https://www.fomal.cc/posts/e593433d.html</a></p><h2 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h2><h3 id="本教程面向Windows用户"><a href="#本教程面向Windows用户" class="headerlink" title="本教程面向Windows用户"></a>本教程面向Windows用户</h3><p>操作系统Windows11<br>Node<br>Git<br>Hexo<br>idea(推荐使用Visual Studo Code)<br>一个GitHub账号<br>一个云服务器（可选）<br>一个域名（可选）</p><h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><h3 id="安装Node"><a href="#安装Node" class="headerlink" title="安装Node"></a>安装Node</h3><p>详情请看下方链接，本人多次失败后总结的经验😢<br><a href="https://www.jess.win/2023/01/02/Node%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/">https://www.jess.win/2023/01/02/Node%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</a></p><p>1、打开Node官网，下载和自己系统对应的Node安装程序，下载地址：<a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/</a></p><p><img src="https://s1.ax1x.com/2023/02/14/pSTUqaj.png" alt="1"></p><p>如果后面美化过程中需要拉取豆瓣、哔哩哔哩等建议安装较低的版本（v12.19.0）<br>查看历史版本，找到v12.19.0进行下载。</p><p><img src="https://s1.ax1x.com/2023/02/14/pSTUjGq.png" alt="2"></p><p>2、下载后傻瓜式安装即可，安装的目录可以使用默认目录【C:&#x2F;Program Files&#x2F;nodejs&#x2F;】，也可以自定义路径。<br>这个环境路径切换坑也很多，如果大家C盘空间足够可以直接装C盘，如果想切换其他盘或者把环境遍历切换到自定义路径也可以，具体教程百度(不过坑比较多就是了)!</p><p>3、安装完成后，检查是否安装成功。在键盘按下win + R键，输入CMD，然后回车，打开CMD窗口，执行node -v命令，看到版本信息，则说明安装成功。</p><p><img src="https://s1.ax1x.com/2023/02/14/pSTUTsS.png" alt="3"></p><p>4、修改npm源。npm下载各种模块，默认是从国处服务器下载，速度较慢，建议配置成淘宝镜像（若有科学上网环境可无需更换）。打开CMD窗口，运行如下命令:</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h3 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h3><p>1、打开Git官网，下载和自己系统对应的Git安装程序，下载地址：<a href="https://git-scm.com/">https://git-scm.com/</a></p><p>2、下载后傻瓜式安装即可，安装的目录可以使用默认目录【C:&#x2F;Program Files&#x2F;Git&#x2F;】，也可以自定义路径。</p><p>3、点击电脑左下角开始即可看见Git Bash。<br>Git CMD 是windows 命令行的指令风格<br>Git Bash 是linux系统的指令风格（建议使用）<br>Git GUI是图形化界面（新手学习不建议使用）</p><p>4、打开Git Bash后如下图所示即代表安装完成。</p><p><img src="https://s1.ax1x.com/2023/02/14/pSTU5xf.png" alt="4"></p><p>常用命令：</p><figure class="highlight plaintext"><figcaption><span>Bash</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git config -l  //查看所有配置</span><br><span class="line"></span><br><span class="line">git config --system --list //查看系统配置</span><br><span class="line"></span><br><span class="line">git config --global --list //查看用户（全局）配置</span><br></pre></td></tr></table></figure><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>1、在Git BATH输入以下命令安装</p><figure class="highlight plaintext"><figcaption><span>Bash</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2023/02/14/pSTUoM8.png" alt="5"></p><p>2、输入一下命令验证是否安装成功。</p><figure class="highlight plaintext"><figcaption><span>Bash</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2023/02/14/pSTU7qg.png" alt="6"></p><h3 id="注册GitHub账号，创建GitHub仓库"><a href="#注册GitHub账号，创建GitHub仓库" class="headerlink" title="注册GitHub账号，创建GitHub仓库"></a>注册GitHub账号，创建GitHub仓库</h3><p>GitHub地址：<a href="https://github.com/">https://github.com/</a></p><p>完成注册后，直接在创建GitHub仓库讲起点击右上角+按钮，创建一个&lt;用户名&gt;.github.io的仓库。</p><p><img src="https://s1.ax1x.com/2023/02/14/pSTUbZQ.png" alt="7"></p><p>若找不到创建入口的，访问：<a href="https://github.com/new">https://github.com/new</a></p><p>仓库的格式必须为：&lt;用户名&gt;.github.io</p><p>Description：为描述仓库（选填）</p><p>勾选 Initialize this repository with a README 初始化一个 README.md 文件</p><p>点击 Creat repository 进行创建</p><p><img src="https://s1.ax1x.com/2023/02/14/pSTUXin.png" alt="8"></p><h3 id="Git连接GitHub"><a href="#Git连接GitHub" class="headerlink" title="Git连接GitHub"></a>Git连接GitHub</h3><p>打开Git Bash输入命令配置用户名和邮箱</p><figure class="highlight plaintext"><figcaption><span>Bash</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;你的用户名&quot;</span><br><span class="line">git config --global user.email &quot;你的邮箱&quot;</span><br></pre></td></tr></table></figure><p>输入后没有报错即代表设置成功。如图：</p><p><img src="https://s1.ax1x.com/2023/02/14/pSTULIs.png" alt="9"></p><p>通过以下命令检查是否配置成功。</p><figure class="highlight plaintext"><figcaption><span>Bash</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config -l</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2023/02/15/pS7DPfJ.png" alt="10"></p><p>生成ssh公钥，执行以下命令连接Github。</p><figure class="highlight plaintext"><figcaption><span>Bash</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你的邮箱&quot;</span><br></pre></td></tr></table></figure><p>点击Enter后会显示默认创建的文件夹和设置密码。直接回车即可。（文件夹直接默认，密码也可以不设置）</p><p><img src="https://s1.ax1x.com/2023/02/15/pS7DCY4.png" alt="11"></p><p>之后打开C盘用户文件夹下的.ssh的文件夹，会看到id_rsa.pub</p><p><img src="https://s1.ax1x.com/2023/02/15/pS7D9kF.png" alt="12"></p><p>使用记事本打开上述图片中的公钥（id_rsa.pub）,复制里面的内容，然后开始在Github中配置ssh密钥。</p><p><img src="https://s1.ax1x.com/2023/02/15/pS7BzwT.png" alt="13"></p><p>将 SSH KEY 配置到 GitHub.进入github，点击右上角头像 选择settings</p><p><img src="https://s1.ax1x.com/2023/02/15/pS7DSTU.png" alt="14"></p><p>进入设置页后选择 SSH and GPG keys，点选New SSH key。</p><p><img src="https://s1.ax1x.com/2023/02/15/pS7DklR.png" alt="15"></p><p>注意: 要是有【Key type】的选择项 ，选择默认Authentication Key 即可。</p><p><img src="https://s1.ax1x.com/2023/02/15/pS7DA61.png" alt="16"></p><p>连接测试，输入一下命令:</p><figure class="highlight plaintext"><figcaption><span>Bash</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2023/02/15/pS7DFp9.png" alt="17"></p><p>此时Git与Github已经连接成功。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/02/03/hello-world/"/>
      <url>/2023/02/03/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Node安装与配置</title>
      <link href="/2023/01/02/Node%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
      <url>/2023/01/02/Node%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="Node安装"><a href="#Node安装" class="headerlink" title="Node安装"></a>Node安装</h2><p>官网下载链接：<a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/</a><br>根据自己需要的版本下载对应系统版本的安装包。本次已Windows11 64位为例。</p><p><img src="https://s1.ax1x.com/2023/02/14/pSoLgDf.png" alt="1"></p><h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><p>全部默认安装就行<br><img src="https://s1.ax1x.com/2023/02/14/pSoLsgI.png" alt="2"><br><img src="https://s1.ax1x.com/2023/02/14/pSoLyvt.png" alt="3"><br><img src="https://s1.ax1x.com/2023/02/14/pSoLcKP.png" alt="4"><br><img src="https://s1.ax1x.com/2023/02/14/pSoLr8A.png" alt="5"><br><img src="https://s1.ax1x.com/2023/02/14/pSoL2b8.png" alt="6"><br><img src="https://s1.ax1x.com/2023/02/14/pSoLfUg.png" alt="7"></p><p>查看饰扣配置基本的环境变量<br><img src="https://s1.ax1x.com/2023/02/14/pSTYGKe.png" alt="8"></p><p>以管理员身份运行CMD查看是否安装成功</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2023/02/14/pSoLWVS.png" alt="9"></p><h2 id="配置Node环境变量"><a href="#配置Node环境变量" class="headerlink" title="配置Node环境变量"></a>配置Node环境变量</h2><p>找到Node安装路径，新建两个文件夹node_cache、node_global。</p><p><img src="https://s1.ax1x.com/2023/02/14/pSoLh5Q.png" alt="10"></p><p>以管理员身份运行CMD。输入：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> prefix &quot;C:\Program Files\nodejs\node_global&quot;  # 全局路径</span><br><span class="line">npm config <span class="built_in">set</span> cache &quot;C:\Program Files\nodejs\node_cache&quot;  # 缓存路径</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2023/02/14/pSoLI8s.png" alt="11"></p><p>环境变量–用户变量–Path–更改npm默认路径，将C:\Users\Jess\AppData\Roaming\npm更改为C:\Program Files\nodejs\node_global</p><p><img src="https://s1.ax1x.com/2023/02/14/pSoLbrV.png" alt="12"></p><p>下一步需要在“C:\Program Files\nodejs\node_global”下面创建一个node_modules文件夹，但是需要自动生成。安装一个插件即可生成这个文件夹，以管理员运行CMD，输入：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g vue</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2023/02/14/pSoL5Cj.png" alt="13"></p><p>安装完成后“C:\Program Files\nodejs\node_global”中会出现”node_modules”文件夹。</p><h3 id="修改环境变量"><a href="#修改环境变量" class="headerlink" title="修改环境变量"></a>修改环境变量</h3><p>修改用户变量中的Path</p><p><img src="https://s1.ax1x.com/2023/02/14/pSoLTvq.png" alt="14"></p><h3 id="修改系统变量"><a href="#修改系统变量" class="headerlink" title="修改系统变量"></a>修改系统变量</h3><p>新建一个系统变量如下：</p><p><img src="https://s1.ax1x.com/2023/02/14/pSoLo2n.png" alt="15"></p><p>修改系统变量中的Path</p><p><img src="https://s1.ax1x.com/2023/02/14/pSoLHK0.png" alt="16"></p><h3 id="测试是否配置成功"><a href="#测试是否配置成功" class="headerlink" title="测试是否配置成功"></a>测试是否配置成功</h3><p>这里我们下载一个vue插件测试一下是否可以安装成功。以管理员身份打开CMD，输入：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node # 进入node</span><br><span class="line">require(&#x27;vue&#x27;)</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2023/02/14/pSTYLI1.png" alt="17"></p><h2 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h2><p>修改环境变量应注意标点符号、字母大小写等。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Node </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu Server 22.04安装配置</title>
      <link href="/2023/01/01/UbuntuServer22-04%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"/>
      <url>/2023/01/01/UbuntuServer22-04%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="安装方法："><a href="#安装方法：" class="headerlink" title="安装方法："></a>安装方法：</h2><h3 id="1、加载虚拟光盘，准备好安装硬件配置"><a href="#1、加载虚拟光盘，准备好安装硬件配置" class="headerlink" title="1、加载虚拟光盘，准备好安装硬件配置"></a>1、加载虚拟光盘，准备好安装硬件配置</h3><p><img src="https://s1.ax1x.com/2023/02/14/pSofHRU.png" alt="1"></p><h3 id="2、语言设置默认English回车即可"><a href="#2、语言设置默认English回车即可" class="headerlink" title="2、语言设置默认English回车即可"></a>2、语言设置默认English回车即可</h3><p><img src="https://s1.ax1x.com/2023/02/14/pSof7GT.png" alt="2"></p><h3 id="3、语言设置默认English回车"><a href="#3、语言设置默认English回车" class="headerlink" title="3、语言设置默认English回车"></a>3、语言设置默认English回车</h3><p><img src="https://s1.ax1x.com/2023/02/14/pSofII0.png" alt="3"></p><h3 id="4、选择最小化安装"><a href="#4、选择最小化安装" class="headerlink" title="4、选择最小化安装"></a>4、选择最小化安装</h3><p><img src="https://s1.ax1x.com/2023/02/14/pSof5aq.png" alt="4"></p><h3 id="5、配置IP地址，我选择的是配置IPV4地址"><a href="#5、配置IP地址，我选择的是配置IPV4地址" class="headerlink" title="5、配置IP地址，我选择的是配置IPV4地址"></a>5、配置IP地址，我选择的是配置IPV4地址</h3><p><img src="https://s1.ax1x.com/2023/02/14/pSofTiV.png" alt="5"></p><h3 id="6、选择Manual进行手动配置"><a href="#6、选择Manual进行手动配置" class="headerlink" title="6、选择Manual进行手动配置"></a>6、选择Manual进行手动配置</h3><p><img src="https://s1.ax1x.com/2023/02/14/pSofbzF.png" alt="6"></p><p><img src="https://s1.ax1x.com/2023/02/14/pSofLM4.png" alt="7"></p><h3 id="7、代理配置，默认不填。直接回车"><a href="#7、代理配置，默认不填。直接回车" class="headerlink" title="7、代理配置，默认不填。直接回车"></a>7、代理配置，默认不填。直接回车</h3><p><img src="https://s1.ax1x.com/2023/02/14/pSofOsJ.png" alt="8"></p><h3 id="8、此处为配置atp源，因为我有科学上网的环境不需要更换至国内的atp源。"><a href="#8、此处为配置atp源，因为我有科学上网的环境不需要更换至国内的atp源。" class="headerlink" title="8、此处为配置atp源，因为我有科学上网的环境不需要更换至国内的atp源。"></a>8、此处为配置atp源，因为我有科学上网的环境不需要更换至国内的atp源。</h3><p><img src="https://s1.ax1x.com/2023/02/14/pSofvZR.png" alt="9"><br>此处为清华大学开源软件镜像站链接，可以挑选自己安装的Linux版本进行配置相对应的软件源。</p><h3 id="9、选择默认的vm分区即可"><a href="#9、选择默认的vm分区即可" class="headerlink" title="9、选择默认的vm分区即可"></a>9、选择默认的vm分区即可</h3><p><img src="https://s1.ax1x.com/2023/02/14/pSofXL9.png" alt="10"><br>默认不会分配所有的空间，需要手动分配所有空间<br><img src="https://s1.ax1x.com/2023/02/14/pSofxd1.png" alt="11"></p><h3 id="取消默认分区"><a href="#取消默认分区" class="headerlink" title="取消默认分区"></a>取消默认分区</h3><p><img src="https://s1.ax1x.com/2023/02/14/pSofzIx.png" alt="12"></p><h3 id="删除默认分配的lvm，手动新建"><a href="#删除默认分配的lvm，手动新建" class="headerlink" title="删除默认分配的lvm，手动新建"></a>删除默认分配的lvm，手动新建</h3><p><img src="https://s1.ax1x.com/2023/02/14/pSoh9JK.png" alt="13"></p><h3 id="创建创建新的lvm分区-x2F-根分区"><a href="#创建创建新的lvm分区-x2F-根分区" class="headerlink" title="创建创建新的lvm分区&#x2F;根分区"></a>创建创建新的lvm分区&#x2F;根分区</h3><p><img src="https://s1.ax1x.com/2023/02/14/pSohPzD.png" alt="14"><br><img src="https://s1.ax1x.com/2023/02/14/pSohT0A.png" alt="15"></p><h3 id="创建-x2F-boot分区"><a href="#创建-x2F-boot分区" class="headerlink" title="创建&#x2F;boot分区"></a>创建&#x2F;boot分区</h3><p><img src="https://s1.ax1x.com/2023/02/14/pSohpi6.png" alt="16"><br><img src="https://s1.ax1x.com/2023/02/14/pSohCRO.png" alt="17"></p><h3 id="此时分区创建完毕，点击continue"><a href="#此时分区创建完毕，点击continue" class="headerlink" title="此时分区创建完毕，点击continue"></a>此时分区创建完毕，点击continue</h3><p><img src="https://s1.ax1x.com/2023/02/14/pSoh7TI.png" alt="18"></p><h3 id="10、配置主机名称与普通用户"><a href="#10、配置主机名称与普通用户" class="headerlink" title="10、配置主机名称与普通用户"></a>10、配置主机名称与普通用户</h3><p><img src="https://s1.ax1x.com/2023/02/14/pSohomd.png" alt="19"></p><h3 id="11、选择安装SSH"><a href="#11、选择安装SSH" class="headerlink" title="11、选择安装SSH"></a>11、选择安装SSH</h3><p><img src="https://s1.ax1x.com/2023/02/14/pSoh5OH.png" alt="20"></p><h3 id="12、开始安装系统，出现Reboot-Now说明系统安装完成"><a href="#12、开始安装系统，出现Reboot-Now说明系统安装完成" class="headerlink" title="12、开始安装系统，出现Reboot Now说明系统安装完成"></a>12、开始安装系统，出现Reboot Now说明系统安装完成</h3><p><img src="https://s1.ax1x.com/2023/02/14/pSoh46e.png" alt="21"></p><h2 id="简单的管理工具"><a href="#简单的管理工具" class="headerlink" title="简单的管理工具"></a>简单的管理工具</h2><h3 id="最后Ubuntu与CentOS7管理工具区别"><a href="#最后Ubuntu与CentOS7管理工具区别" class="headerlink" title="最后Ubuntu与CentOS7管理工具区别"></a>最后Ubuntu与CentOS7管理工具区别</h3><table>  <tr>    <th>操作内容</th>    <th>CentOS6/7</th>    <th>Denbian/Ubuntu</th>  </tr>  <tr>    <td>软件包后缀</td>    <td>*.rpm</td>    <td>*.deb</td>  </tr>    <tr>    <td>软件源配置文件</td>    <td>/etc/yum.conf</td>    <td>/etc/apt/sources.list</td>  </tr>  <tr>    <td>更新软件包列表</td>    <td>yum makecache fast</td>    <td>apt update</td>  </tr>  <tr>    <td>从软件仓库安装软件</td>    <td>yum install package</td>    <td>apt install package</td>  </tr>  <tr>    <td>安装本地软件包</td>    <td>rpm -i pkg.rpm</td>    <td>dpkg -i pkg.deb</td>  </tr>    </tr>  <tr>    <td>.删除软件包</td>    <td>yum remove package</td>    <td>apt remove package</td>  </tr>    </tr>  <tr>    <td>获取某软件包的信息</td>    <td>yum search package</td>    <td>apt search package</td>  </tr></table><h3 id="Ubuntu更新系统apt资源"><a href="#Ubuntu更新系统apt资源" class="headerlink" title="Ubuntu更新系统apt资源"></a>Ubuntu更新系统apt资源</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get update</span><br></pre></td></tr></table></figure><h3 id="Ubuntu系统与软件更新"><a href="#Ubuntu系统与软件更新" class="headerlink" title="Ubuntu系统与软件更新"></a>Ubuntu系统与软件更新</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get upgrade</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OpenWRT中安装软件</title>
      <link href="/2022/12/30/OpenWRT%E4%B8%AD%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6/"/>
      <url>/2022/12/30/OpenWRT%E4%B8%AD%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>1、更新OpenWRT软件包列表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">opkg update</span><br></pre></td></tr></table></figure><p>2、查询可安装的软件包列表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">opkg list</span><br></pre></td></tr></table></figure><p>3、搜索列表里是否有此插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">opkg list|grep 插件名字</span><br></pre></td></tr></table></figure><p>4、在线安装插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">opkg install 插件名字</span><br></pre></td></tr></table></figure><h3 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h3><p>1、尽量安装英文版本的插件，中文版本有时会出现乱码</p><p>2、需要使用梯子</p>]]></content>
      
      
      
        <tags>
            
            <tag> OpenWRT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树莓派远程卡顿问题</title>
      <link href="/2022/12/29/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%BF%9C%E7%A8%8B%E5%8D%A1%E9%A1%BF%E9%97%AE%E9%A2%98/"/>
      <url>/2022/12/29/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%BF%9C%E7%A8%8B%E5%8D%A1%E9%A1%BF%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>树莓派内存要用于Broadcom BCM2837上的CPU和GPU，因此要合理分配内存。</p><h2 id="方法："><a href="#方法：" class="headerlink" title="方法："></a>方法：</h2><p>1、系统设置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo raspi-config</span><br></pre></td></tr></table></figure><p>2、性能选项：Performance Options</p><p>3、GPU内存：GPU Memory</p><p>4、分配合理的GPU显存(单位M),建议512M左右就不会卡顿</p><p>5、保存–退出</p><p>6、重启：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo reboot</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Raspberry Pi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ESXI无法打开虚拟机电源，对象类型需要托管的IO</title>
      <link href="/2022/12/27/ESXI%E6%97%A0%E6%B3%95%E6%89%93%E5%BC%80%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%94%B5%E6%BA%90%EF%BC%8C%E5%AF%B9%E8%B1%A1%E7%B1%BB%E5%9E%8B%E9%9C%80%E8%A6%81%E6%89%98%E7%AE%A1%E7%9A%84IO/"/>
      <url>/2022/12/27/ESXI%E6%97%A0%E6%B3%95%E6%89%93%E5%BC%80%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%94%B5%E6%BA%90%EF%BC%8C%E5%AF%B9%E8%B1%A1%E7%B1%BB%E5%9E%8B%E9%9C%80%E8%A6%81%E6%89%98%E7%AE%A1%E7%9A%84IO/</url>
      
        <content type="html"><![CDATA[<p>如果你的ESXI里面的虚拟机不能开机，提示无法打开虚拟机电源， 对象类型需要托管的I&#x2F;O，那么按照以下方法操作即可解决。</p><h2 id="一、开启ESXI的SSH功能"><a href="#一、开启ESXI的SSH功能" class="headerlink" title="一、开启ESXI的SSH功能"></a>一、开启ESXI的SSH功能</h2><p><img src="https://s1.ax1x.com/2023/02/13/pSo1fH0.png" alt="1"></p><h2 id="二、点击事务提示找到路径"><a href="#二、点击事务提示找到路径" class="headerlink" title="二、点击事务提示找到路径"></a>二、点击事务提示找到路径</h2><p><img src="https://s1.ax1x.com/2023/02/13/pSo1WBq.png" alt="2"><br><img src="https://s1.ax1x.com/2023/02/13/pSo14EV.png" alt="3"></p><h2 id="三、登陆SSH输入命令"><a href="#三、登陆SSH输入命令" class="headerlink" title="三、登陆SSH输入命令"></a>三、登陆SSH输入命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vmkfstools -x check 路径</span></span><br></pre></td></tr></table></figure><h3 id="例子："><a href="#例子：" class="headerlink" title="例子："></a>例子：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vmkfstools -x check /vmfs/volumes/5d582a2a-40abb997-8ffd-e43a6e0448e3/LEDE/openwrt-x86-64-combined-squashfs.vmdk (里面的地址修改为你错误信息里面的地址)</span></span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2023/02/13/pSo1gjs.png" alt="4"></p><p>如果提示“Disk needs repair.”在输入以下命令修复即可重新开启:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vmkfstools -x repair 路径</span></span><br></pre></td></tr></table></figure><h3 id="例子：-1"><a href="#例子：-1" class="headerlink" title="例子："></a>例子：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vmkfstools -x repair /vmfs/volumes/5d582a2a-40abb997-8ffd-e43a6e0448e3/LEDE/openwrt-x86-64-combined-squashfs.vmdk (里面的地址修改为你错误信息里面的地址)</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2023/02/13/pSo1Run.png" alt="5"></p><p>完成后后提示“Disk was successfully repaired.”</p>]]></content>
      
      
      
        <tags>
            
            <tag> VMware </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
